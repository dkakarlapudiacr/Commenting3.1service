<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Acr.Assist.Commenting.API</name>
    </assembly>
    <members>
        <member name="T:Acr.Assist.CommentMicroService.UserIdExistsRequirementHandler">
            <summary>
             Filter that checks if the User specified by the UserName exists in Assist
             </summary>
        </member>
        <member name="F:Acr.Assist.CommentMicroService.UserIdExistsRequirementHandler.authorizationMicroService">
            <summary>
            The authorization micro service
            </summary>
        </member>
        <member name="F:Acr.Assist.CommentMicroService.UserIdExistsRequirementHandler.logger">
            <summary>
            The logger
            </summary>
        </member>
        <member name="F:Acr.Assist.CommentMicroService.UserIdExistsRequirementHandler.authorizationConfig">
            <summary>
            The authorization configuration
            </summary>
        </member>
        <member name="F:Acr.Assist.CommentMicroService.UserIdExistsRequirementHandler.httpContextAccessor">
            <summary>
            The HTTP context accessor
            </summary>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.UserIdExistsRequirementHandler.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Acr.Assist.CommentMicroService.Core.Integrations.IAuthorizationMicroService,Microsoft.Extensions.Logging.ILogger{Acr.Assist.CommentMicroService.UserIdExistsRequirementHandler},Acr.Assist.CommentMicroService.Core.Infrastructure.Configuration.AuthorizationConfig)">
            <summary>
            Initializes a new instance of the <see cref="T:Acr.Assist.CommentMicroService.UserIdExistsRequirementHandler"/> class.
            </summary>
            <param name="httpContextAccessor">The HTTP context accessor.</param>
            <param name="authorizationMicroService">The authorization micro service.</param>
            <param name="logger">The logger.</param>
            <param name="authorizationConfig">The authorization configuration.</param>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.UserIdExistsRequirementHandler.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Acr.Assist.CommentMicroService.UserIdRequirement)">
            <summary>
            Check if  requirement has been handled
            </summary>
        </member>
        <member name="T:Acr.Assist.CommentMicroService.UserIdRequirement">
            <summary>
            Represensts the requirement for user Id 
            </summary>
        </member>
        <member name="P:Acr.Assist.CommentMicroService.UserIdRequirement.UserIdClaim">
            <summary>
            Gets the user identifier claim.
            </summary>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.UserIdRequirement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Acr.Assist.CommentMicroService.UserIdRequirement"/> class.
            </summary>
            <param name="userIdClaim">The user identifier claim.</param>
        </member>
        <member name="T:Acr.Assist.CommentMicroService.Controllers.BaseController">
            <summary>
            Base  class for all controllers
            </summary>
        </member>
        <member name="P:Acr.Assist.CommentMicroService.Controllers.BaseController.LoggerInstance">
            <summary>
            Instance of the Logger
            </summary>
        </member>
        <member name="P:Acr.Assist.CommentMicroService.Controllers.BaseController.configuration">
            <summary>
            configuration
            </summary>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.BaseController.#ctor(Acr.Assist.CommentMicroService.Core.Infrastructure.Configuration.IConfigurationManager)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="T:Acr.Assist.CommentMicroService.Controllers.CommentsController">
            <summary>
            comments operations handled by this controller
            </summary>
            <seealso cref="T:Acr.Assist.CommentMicroService.Controllers.BaseController" />
        </member>
        <member name="F:Acr.Assist.CommentMicroService.Controllers.CommentsController.commentService">
            <summary>
            The comment service
            </summary>
        </member>
        <member name="F:Acr.Assist.CommentMicroService.Controllers.CommentsController.authorizationMicroService">
            <summary>
            The authorization micro service
            </summary>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.CommentsController.#ctor(Acr.Assist.CommentMicroService.Core.Services.ICommentService,Acr.Assist.CommentMicroService.Core.Integrations.IAuthorizationMicroService,Microsoft.Extensions.Logging.ILogger{Acr.Assist.CommentMicroService.Controllers.NotificationController},Acr.Assist.CommentMicroService.Core.Infrastructure.Configuration.IConfigurationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Acr.Assist.CommentMicroService.Controllers.CommentsController"/> class.
            </summary>
            <param name="commentService">The comment service.</param>
            <param name="authorizationMicroService">The authorization micro service.</param>
            <param name="logger">The logger.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.CommentsController.GetComments(Acr.Assist.CommentMicroService.Core.DTO.CommentsFilter)">
            <summary>
            Returns the list of comments for module topic 
            </summary>
            <param name="filter">Contains the commentsFilter</param>
            <returns></returns>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.CommentsController.AddComment(Acr.Assist.CommentMicroService.Core.DTO.AddCommentEntry)">
            <summary>
            Adds a comment for module topic
            </summary>
            <param name="commentEntry">Contains the addCommentEntry</param>
            <returns></returns>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.CommentsController.DeleteComment(System.Guid)">
            <summary>
            Deletes the comment
            </summary>
            <param name="commentID">Contains the unique id of comment</param>
            <returns></returns>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.CommentsController.EditComment(System.Guid,Acr.Assist.CommentMicroService.Core.DTO.UpdateCommentEntry)">
            <summary>
            Edits the comment
            </summary>
            <param name="commentID">Contains the unique id of comment</param>
            <param name="commentEntry">Contains the updateCommentEntry</param>
            <returns></returns>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.CommentsController.ProposeComment(System.Guid,Acr.Assist.CommentMicroService.Core.DTO.CommentUserEntry)">
            <summary>
            Propose a Comment
            </summary>
            <param name="commentID">Contains the unique id of comment</param>
            <param name="userEntry">Contains the commentUserEntry</param>
            <returns></returns>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.CommentsController.ImplementComment(System.Guid,Acr.Assist.CommentMicroService.Core.DTO.CommentImplementEntry)">
            <summary>
            Marks the comment as implemented
            </summary>
            <param name="commentID">Contains the unique id of comment</param>
            <param name="commentImplementEntry">Contains the commentImplementEntry</param>
            <returns></returns>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.CommentsController.DeleteTopicComments(System.String,System.String)">
            <summary>
            Deletes the comment based on module id and topic id
            </summary>    /// <param name="moduleId"></param>
            <param name="topicName"></param>
            <returns></returns>
        </member>
        <member name="T:Acr.Assist.CommentMicroService.Controllers.EndorseController">
            <summary>
            Comments endorse operations handled by this controller
            </summary>
            <seealso cref="T:Acr.Assist.CommentMicroService.Controllers.BaseController" />
        </member>
        <member name="F:Acr.Assist.CommentMicroService.Controllers.EndorseController.commentSuggestionService">
            <summary>
            The comment suggestion service
            </summary>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.EndorseController.#ctor(Acr.Assist.CommentMicroService.Core.Services.ICommentSuggestionService,Microsoft.Extensions.Logging.ILogger{Acr.Assist.CommentMicroService.Controllers.EndorseController},Acr.Assist.CommentMicroService.Core.Infrastructure.Configuration.IConfigurationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Acr.Assist.CommentMicroService.Controllers.EndorseController"/> class.
            </summary>
            <param name="commentSuggestionService">The comment suggestion service.</param>
            <param name="logger">The logger.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.EndorseController.AddCommentSuggestion(System.Guid,Acr.Assist.CommentMicroService.Core.DTO.CommentUserEntry)">
            <summary>
             Marks the comment as suggested
            </summary>
            <param name="commentID">Contains the unique id of comment</param>
            <param name="user">Contains the commentUserEntry</param>
            <returns></returns>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.EndorseController.DeleteCommentSuggestion(System.Guid,System.String)">
            <summary>
            Deletes the user comment suggestion
            </summary>
            <param name="commentID">Contains the unique id of comment</param>
            <param name="userID">Contains the unique id of user</param>
            <returns></returns>
        </member>
        <member name="T:Acr.Assist.CommentMicroService.Controllers.HelloWorldController">
            <summary>
            Testing operations handled by this controller
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.HelloWorldController.HelloWorld">
            <summary>
            Method which determines if the service is running
            </summary>
            <returns>Returns Hello World if service is running</returns>
        </member>
        <member name="T:Acr.Assist.CommentMicroService.Controllers.ModuleCommentController">
            <summary>
            Module comment operations handled by this controller
            </summary>
            <seealso cref="T:Acr.Assist.CommentMicroService.Controllers.BaseController" />
        </member>
        <member name="F:Acr.Assist.CommentMicroService.Controllers.ModuleCommentController.moduleCommentService">
            <summary>
            The module comment service
            </summary>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.ModuleCommentController.#ctor(Acr.Assist.CommentMicroService.Core.Services.IModuleCommentService,Microsoft.Extensions.Logging.ILogger{Acr.Assist.CommentMicroService.Controllers.ModuleCommentController},Acr.Assist.CommentMicroService.Core.Infrastructure.Configuration.IConfigurationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Acr.Assist.CommentMicroService.Controllers.ModuleCommentController"/> class.
            </summary>
            <param name="moduleCommentService">The module comment service.</param>
            <param name="logger">The logger.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.ModuleCommentController.GetComments(System.String)">
            <summary>
            Returns the list of Comments for a given module
            </summary>
            <param name="moduleID">Contains the unique Id of the module</param>
            <returns></returns>
        </member>
        <member name="T:Acr.Assist.CommentMicroService.Controllers.NotificationController">
            <summary>
            Commnent notification operations handled by this controller
            </summary>
            <seealso cref="T:Acr.Assist.CommentMicroService.Controllers.BaseController" />
        </member>
        <member name="F:Acr.Assist.CommentMicroService.Controllers.NotificationController.commentNotificationService">
            <summary>
            The comment notification service
            </summary>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.NotificationController.#ctor(Acr.Assist.CommentMicroService.Core.Services.ICommentNotificationService,Microsoft.Extensions.Logging.ILogger{Acr.Assist.CommentMicroService.Controllers.NotificationController},Acr.Assist.CommentMicroService.Core.Infrastructure.Configuration.IConfigurationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Acr.Assist.CommentMicroService.Controllers.NotificationController"/> class.
            </summary>
            <param name="commentNotificationService">The comment notification service.</param>
            <param name="logger">The logger.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.NotificationController.AddCommentNotification(System.Guid,Acr.Assist.CommentMicroService.Core.DTO.CommentNotificationEntry)">
            <summary>
            Adds the user Comment Notification
            </summary>
            <param name="commentID">Contains the unique id of comment</param>
            <param name="notificationEntry">Contains the commentNotificationEntry</param>
            <returns></returns>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.NotificationController.DeleteCommentNotification(System.Guid,System.String)">
            <summary>
            Deletes the user comment notification
            </summary>
            <param name="commentID">Contains the unique id of comment</param>
            <param name="userID">Contains the unique id of user</param>
            <returns></returns>
        </member>
        <member name="T:Acr.Assist.CommentMicroService.Controllers.SearchController">
            <summary>
            Comment search operations handled by this controller
            </summary>
            <seealso cref="T:Acr.Assist.CommentMicroService.Controllers.BaseController" />
        </member>
        <member name="F:Acr.Assist.CommentMicroService.Controllers.SearchController.commentQueryableService">
            <summary>
            The comment queryable service
            </summary>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.SearchController.#ctor(Acr.Assist.CommentMicroService.Core.Services.ICommentQueryableService,Microsoft.Extensions.Logging.ILogger{Acr.Assist.CommentMicroService.Controllers.SearchController},Acr.Assist.CommentMicroService.Core.Infrastructure.Configuration.IConfigurationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Acr.Assist.CommentMicroService.Controllers.SearchController"/> class.
            </summary>
            <param name="commentQueryableService">The comment queryable service.</param>
            <param name="logger">The logger.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.SearchController.GetComments(Acr.Assist.CommentMicroService.Core.DTO.CommentsFilter)">
            <summary>
            Returns the list of Comments with all details
            </summary>
            <param name="filter">Contains the CommentsFilter</param>
            <returns></returns>
        </member>
        <member name="T:Acr.Assist.CommentMicroService.Controllers.UserCommentController">
            <summary>
            User comments operations handled by this controller
            </summary>
            <seealso cref="T:Acr.Assist.CommentMicroService.Controllers.BaseController" />
        </member>
        <member name="F:Acr.Assist.CommentMicroService.Controllers.UserCommentController.userCommentService">
            <summary>
            The user comment service/
            </summary>
        </member>
        <member name="F:Acr.Assist.CommentMicroService.Controllers.UserCommentController.authorizationMicroService">
            <summary>
            The authorization micro service
            </summary>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.UserCommentController.#ctor(Acr.Assist.CommentMicroService.Core.Services.IUserCommentService,Acr.Assist.CommentMicroService.Core.Integrations.IAuthorizationMicroService,Microsoft.Extensions.Logging.ILogger{Acr.Assist.CommentMicroService.Controllers.NotificationController},Acr.Assist.CommentMicroService.Core.Infrastructure.Configuration.IConfigurationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Acr.Assist.CommentMicroService.Controllers.UserCommentController"/> class.
            </summary>
            <param name="userCommentService">The user comment service.</param>
            <param name="authorizationMicroService">The authorization micro service.</param>
            <param name="logger">The logger.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.UserCommentController.GetUnViwedComments(System.String)">
            <summary>
            Gets the un viwed comments.
            </summary>
            <param name="userID">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.UserCommentController.UpdateCommentsAsViewed(Acr.Assist.CommentMicroService.Core.DTO.UserCommentsViewEntry)">
            <summary>
            Updates the Comments as Viewed
            </summary>
            <param name="userCommentsView">Contains the userCommentsView</param>
            <returns></returns>
        </member>
        <member name="T:Acr.Assist.CommentMicroService.Controllers.ViewController">
            <summary>
            View comments operations handled by this controller
            </summary>
            <seealso cref="T:Acr.Assist.CommentMicroService.Controllers.BaseController" />
        </member>
        <member name="F:Acr.Assist.CommentMicroService.Controllers.ViewController.commentViewService">
            <summary>
            The comment view service
            </summary>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.ViewController.#ctor(Acr.Assist.CommentMicroService.Core.Services.ICommentViewService,Microsoft.Extensions.Logging.ILogger{Acr.Assist.CommentMicroService.Controllers.NotificationController},Acr.Assist.CommentMicroService.Core.Infrastructure.Configuration.IConfigurationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Acr.Assist.CommentMicroService.Controllers.ViewController"/> class.
            </summary>
            <param name="commentViewService">The comment view service.</param>
            <param name="logger">The logger.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.ViewController.AddCommentView(System.Guid,Acr.Assist.CommentMicroService.Core.DTO.CommentUserEntry)">
            <summary>
            Marks the Comment as Viewed
            </summary>
            <param name="commentID">Contains the unique id of comment</param>
            <param name="userEntry">Contains the user entry details</param>
            <returns></returns>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Controllers.ViewController.DeleteCommentView(System.Guid,System.String)">
            <summary>
            UnMarks the Comment as Viewed
            </summary>
            <param name="commentID">Contains the unique id of comment</param>
            <param name="userID">Contains the unique id of user</param>
            <returns></returns>
        </member>
        <member name="T:Acr.Assist.CommentMicroService.Program">
            <summary>
            Program starts here
            </summary>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Program.Main(System.String[])">
            <summary>
            Defines the entry point of the application.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.Program.BuildWebHost(System.String[])">
            <summary>
            Creates the web host
            </summary>
            <param name="args">Represents the command line arguments</param>
            <returns>TReturns the web host</returns>
        </member>
        <member name="T:Acr.Assist.CommentMicroService.SignalR.NotificationSenderService">
            <summary>
            Real time notification handled by this service
            </summary>
            <seealso cref="T:Acr.Assist.CommentMicroService.Core.Services.INotificationSenderService" />
        </member>
        <member name="F:Acr.Assist.CommentMicroService.SignalR.NotificationSenderService.hubContext">
            <summary>
            The hub context
            </summary>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.SignalR.NotificationSenderService.#ctor(Microsoft.AspNetCore.SignalR.IHubContext{Acr.Assist.CommentMicroService.SignalR.NotificationsHub})">
            <summary>
            Initializes a new instance of the <see cref="T:Acr.Assist.CommentMicroService.SignalR.NotificationSenderService"/> class.
            </summary>
            <param name="hubContext">The hub context.</param>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.SignalR.NotificationSenderService.NotifyAsCommentAdded(Acr.Assist.CommentMicroService.Core.Domain.UserUnViewedComment)">
            <summary>
            Notifies as comment added.
            </summary>
            <param name="userUnViewedComment">The user un viewed comment.</param>
        </member>
        <member name="F:Acr.Assist.CommentMicroService.SignalR.NotificationsHub.logger">
            <summary>
            The logger/
            </summary>
        </member>
        <member name="F:Acr.Assist.CommentMicroService.SignalR.NotificationsHub._users">
            <summary>
            The users
            </summary>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.SignalR.NotificationsHub.#ctor(Serilog.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Acr.Assist.CommentMicroService.SignalR.NotificationsHub"/> class.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.SignalR.NotificationsHub.Send(Acr.Assist.CommentMicroService.Core.Domain.UserUnViewedComment)">
            <summary>
            Sends the specified comment.
            </summary>
            <param name="comment">The comment.</param>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.SignalR.NotificationsHub.GetConnections(System.String)">
            <summary>
            Gets the connections.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.SignalR.NotificationsHub.Subscribe(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Subscribes the specified user identifier.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="modules">The modules.</param>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.SignalR.NotificationsHub.OnConnectedAsync">
            <summary>
            Called when a new connection is established with the hub.
            </summary>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.SignalR.NotificationsHub.OnDisconnectedAsync(System.Exception)">
            <summary>
            Called when a connection with the hub is terminated.
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:Acr.Assist.CommentMicroService.SignalR.NotificationsHub.UnSubscribe(System.Collections.Generic.List{System.String})">
            <summary>
            Uns the subscribe.
            </summary>
            <param name="modules">The modules.</param>
        </member>
        <member name="T:Acr.Assist.Commenting.API.Filters.AuthorizationHeaderOperationFilter">
            <summary>
            Provides the filter for authorization headers
            </summary>
            <seealso cref="T:Swashbuckle.AspNetCore.SwaggerGen.IOperationFilter" />
        </member>
        <member name="M:Acr.Assist.Commenting.API.Filters.AuthorizationHeaderOperationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Applies the specified operation.
            </summary>
            <param name="operation">The operation.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Acr.Assist.Commenting.API.Startup.Configuration">
            <summary>
            Program starts here
            </summary>
        </member>
        <member name="P:Acr.Assist.Commenting.API.Startup.HostingEnvironment">
            <summary>
            Gets the hosting environment.
            </summary>
        </member>
        <member name="F:Acr.Assist.Commenting.API.Startup.swaggerSchemaName">
            <summary>
            The swagger schema name
            </summary>
        </member>
        <member name="M:Acr.Assist.Commenting.API.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Acr.Assist.Commenting.API.Startup"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="hostingEnvironment">The hosting environment.</param>
        </member>
        <member name="M:Acr.Assist.Commenting.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the services.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:Acr.Assist.Commenting.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configures the specified application.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
        <member name="M:Acr.Assist.Commenting.API.Startup.GetKey(System.String)">
            <summary>
            Gets the key.
            </summary>
            <param name="keyFilePath">The key file path.</param>
            <returns></returns>
        </member>
        <member name="M:Acr.Assist.Commenting.API.Startup.GetSwaggerSecurityScheme">
            <summary>
            Gets the swagger security scheme.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Acr.Assist.Commenting.API.Startup.GetMimeTypesForCompression">
            <summary>
            Gets the MIME types for compression.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
